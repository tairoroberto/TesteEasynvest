apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "br.com.tairoroberto.testeeasynvest"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/kotlin',
                            'src/${variant.dirName}/kotlin',
                            'build/generated/source/apt/${variant.dirName}']

            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['src/main/assets']
        }
    }

    productFlavors {
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
    }
}

kapt {
    generateStubs = true
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android support  libs
    implementation "com.android.support:appcompat-v7:${rootProject.supportLibs}"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout"
    implementation "com.android.support:design:${rootProject.supportLibs}"

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$rootProject.kotlin_version"
    implementation "org.jetbrains.anko:anko-coroutines:$anko_version"

    // ReactiveX
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofit"

    /* Lightweight-Stream-API for maps and filters */
    implementation "com.annimon:stream:${rootProject.stream}"

    // Network libs and parse JSON
    implementation "com.google.code.gson:gson:${rootProject.gson}"

    // Dependency injection
    implementation "com.google.dagger:dagger:${rootProject.dagger}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.dagger}"

    // mask format for phone numbers
    implementation "com.vicmikhailau:MaskedEditText:${rootProject.maskedEditText}"

    // chart lib
    implementation "com.github.PhilJay:MPAndroidChart:${rootProject.chart}"

    //image loader
    implementation "com.github.bumptech.glide:glide:${rootProject.glide}"

    // Test libs
    testImplementation "junit:junit:${rootProject.junit}"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:${rootProject.espresso}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation "com.android.support.test:runner:${rootProject.runner}"
    implementation "com.android.support.test.espresso:espresso-idling-resource:${rootProject.espresso}"
    testImplementation "org.mockito:mockito-core:${rootProject.mockito}"
    testImplementation "org.robolectric:robolectric:${rootProject.robolectric}"
}
